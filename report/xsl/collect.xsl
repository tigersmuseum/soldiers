<?xml version="1.0"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:soldiers="http://royalhampshireregiment.org/soldiers" version="1.0">

<!-- 

	Collect together person elements from source files in preparation for creating reports. This transform is driven by an input file of
	Soldiers XML generated by querying a soldiers database. This will have one or more person elements, each having a single
	candidate element.
	
	For each identified person in the input, the transform will create a corresponding 'bio' element in the output. This will have a copy 
	of the person element that came from the database, together with any matching person elements from files listed in the
	XML file named by the 'sources' parameter.
	The 'sources' file is a list of source files to search. It has a 'source' element for each, with a 'file' attribute
	containing the URL of a file of Soldiers XML that has been annotated with candidate elements. Each source element an optional 'name'
	attribute.
	
 -->

<xsl:import href="select-soldier.xsl"/>

<xsl:output method="xml" encoding="UTF-8" indent="yes"/>

<xsl:param name="sources"/>

<xsl:template match="/">
<list>
	<xsl:apply-templates select="//soldiers:person"/>
</list>
</xsl:template>


<xsl:template match="soldiers:person[count(soldiers:candidate) = 1]">
<bio sid="{soldiers:candidate[1]/@sid}">
	<database>
		<xsl:copy-of select="."/>
	</database>
	<xsl:message>SID - <xsl:value-of select="soldiers:candidate[1]/@sid"/></xsl:message>
	<sources>
		<xsl:apply-templates select="document($sources)//source">
			<xsl:with-param name="sid" select="soldiers:candidate[1]/@sid"/>
		</xsl:apply-templates>
	</sources>
</bio>
</xsl:template>


<xsl:template match="soldiers:person">
	<xsl:message>Error - No unambigous identity for <xsl:value-of select="soldiers:surname"/>, <xsl:value-of select="soldiers:initials"/> </xsl:message>
</xsl:template>

</xsl:stylesheet>
